{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintCallSuccessfull",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161064438038061064483398101604081905261002f916100a6565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03191692909116919091179055506100d9565b80516001600160a01b03811681146100a157600080fd5b919050565b600080604083850312156100b957600080fd5b6100c28361008a565b91506100d06020840161008a565b90509250929050565b60805161054b6100f9600039600081816090015260fc015261054b6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101f3565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c366004610224565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610439565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104e6565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b6040517fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8890600090a15050565b60006020828403121561020557600080fd5b81356001600160e01b03198116811461021d57600080fd5b9392505050565b60006020828403121561023657600080fd5b813567ffffffffffffffff81111561024d57600080fd5b820160a0818503121561021d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156102985761029861025f565b60405290565b60405160a0810167ffffffffffffffff811182821017156102985761029861025f565b604051601f8201601f1916810167ffffffffffffffff811182821017156102ea576102ea61025f565b604052919050565b803567ffffffffffffffff8116811461030a57600080fd5b919050565b600082601f83011261032057600080fd5b813567ffffffffffffffff81111561033a5761033a61025f565b61034d601f8201601f19166020016102c1565b81815284602083860101111561036257600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261039057600080fd5b8135602067ffffffffffffffff8211156103ac576103ac61025f565b6103ba818360051b016102c1565b82815260069290921b840181019181810190868411156103d957600080fd5b8286015b8481101561042e57604081890312156103f65760008081fd5b6103fe610275565b81356001600160a01b03811681146104165760008081fd5b815281850135858201528352918301916040016103dd565b509695505050505050565b600060a0823603121561044b57600080fd5b61045361029e565b82358152610463602084016102f2565b6020820152604083013567ffffffffffffffff8082111561048357600080fd5b61048f3683870161030f565b604084015260608501359150808211156104a857600080fd5b6104b43683870161030f565b606084015260808501359150808211156104cd57600080fd5b506104da3682860161037f565b60808301525092915050565b6000825160005b8181101561050757602081860181015185830152016104ed565b50600092019182525091905056fea264697066735822122030fd2562268b199c6fbfb1b3f8b11182bfde3058c991f937ca860a53723f1c9e64736f6c63430008130033",
    "sourceMap": "454:437:51:-:0;;;553:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;614:6;-1:-1:-1;;;;;532:20:30;;528:58;;561:25;;-1:-1:-1;;;561:25:30;;583:1;561:25;;;640:51:55;613:18;;561:25:30;;;;;;;528:58;-1:-1:-1;;;;;592:17:30;;;;;632:3:51::1;:23:::0;;-1:-1:-1;;;;;;632:23:51::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;454:437:51;;14:177:55;93:13;;-1:-1:-1;;;;;135:31:55;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;454:437:51;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101f3565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c366004610224565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610439565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104e6565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b6040517fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8890600090a15050565b60006020828403121561020557600080fd5b81356001600160e01b03198116811461021d57600080fd5b9392505050565b60006020828403121561023657600080fd5b813567ffffffffffffffff81111561024d57600080fd5b820160a0818503121561021d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156102985761029861025f565b60405290565b60405160a0810167ffffffffffffffff811182821017156102985761029861025f565b604051601f8201601f1916810167ffffffffffffffff811182821017156102ea576102ea61025f565b604052919050565b803567ffffffffffffffff8116811461030a57600080fd5b919050565b600082601f83011261032057600080fd5b813567ffffffffffffffff81111561033a5761033a61025f565b61034d601f8201601f19166020016102c1565b81815284602083860101111561036257600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261039057600080fd5b8135602067ffffffffffffffff8211156103ac576103ac61025f565b6103ba818360051b016102c1565b82815260069290921b840181019181810190868411156103d957600080fd5b8286015b8481101561042e57604081890312156103f65760008081fd5b6103fe610275565b81356001600160a01b03811681146104165760008081fd5b815281850135858201528352918301916040016103dd565b509695505050505050565b600060a0823603121561044b57600080fd5b61045361029e565b82358152610463602084016102f2565b6020820152604083013567ffffffffffffffff8082111561048357600080fd5b61048f3683870161030f565b604084015260608501359150808211156104a857600080fd5b6104b43683870161030f565b606084015260808501359150808211156104cd57600080fd5b506104da3682860161037f565b60808301525092915050565b6000825160005b8181101561050757602081860181015185830152016104ed565b50600092019182525091905056fea264697066735822122030fd2562268b199c6fbfb1b3f8b11182bfde3058c991f937ca860a53723f1c9e64736f6c63430008130033",
    "sourceMap": "454:437:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:201:30;;;;;;:::i;:::-;;:::i;:::-;;;470:14:55;;463:22;445:41;;433:2;418:18;765:201:30;;;;;;;;1012:122;;;;;;:::i;:::-;;:::i;:::-;;1546:86;;;-1:-1:-1;;;;;1618:8:30;1061:32:55;1043:51;;1031:2;1016:18;1546:86:30;897:203:55;765:201:30;842:4;-1:-1:-1;;;;;;861:56:30;;-1:-1:-1;;;861:56:30;;:100;;-1:-1:-1;;;;;;;921:40:30;;-1:-1:-1;;;921:40:30;861:100;854:107;765:201;-1:-1:-1;;765:201:30:o;1012:122::-;1764:10;-1:-1:-1;;;;;1786:8:30;1764:31;;1760:69;;1804:25;;-1:-1:-1;;;1804:25:30;;1818:10;1804:25;;;1043:51:55;1016:18;;1804:25:30;;;;;;;1760:69;1108:21:::1;;1121:7:::0;1108:21:::1;:::i;:::-;:12;:21::i;:::-;1012:122:::0;:::o;668:221:51:-;771:12;797:3;;807:12;;;;789:31;;-1:-1:-1;;;;;797:3:51;;;;789:31;;807:12;789:31;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;770:50;;;838:7;830:16;;;;;;861:21;;;;;;;760:129;668:221;:::o;14:286:55:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:55;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:55:o;497:395::-;591:6;644:2;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;700:9;687:23;733:18;725:6;722:30;719:50;;;765:1;762;755:12;719:50;788:22;;844:3;826:16;;;822:26;819:46;;;861:1;858;851:12;1105:127;1166:10;1161:3;1157:20;1154:1;1147:31;1197:4;1194:1;1187:15;1221:4;1218:1;1211:15;1237:256;1308:4;1302:11;;;1340:17;;1387:18;1372:34;;1408:22;;;1369:62;1366:88;;;1434:18;;:::i;:::-;1470:4;1463:24;1237:256;:::o;1498:252::-;1569:2;1563:9;1611:4;1599:17;;1646:18;1631:34;;1667:22;;;1628:62;1625:88;;;1693:18;;:::i;1755:275::-;1826:2;1820:9;1891:2;1872:13;;-1:-1:-1;;1868:27:55;1856:40;;1926:18;1911:34;;1947:22;;;1908:62;1905:88;;;1973:18;;:::i;:::-;2009:2;2002:22;1755:275;;-1:-1:-1;1755:275:55:o;2035:171::-;2102:20;;2162:18;2151:30;;2141:41;;2131:69;;2196:1;2193;2186:12;2131:69;2035:171;;;:::o;2211:530::-;2253:5;2306:3;2299:4;2291:6;2287:17;2283:27;2273:55;;2324:1;2321;2314:12;2273:55;2360:6;2347:20;2386:18;2382:2;2379:26;2376:52;;;2408:18;;:::i;:::-;2452:55;2495:2;2476:13;;-1:-1:-1;;2472:27:55;2501:4;2468:38;2452:55;:::i;:::-;2532:2;2523:7;2516:19;2578:3;2571:4;2566:2;2558:6;2554:15;2550:26;2547:35;2544:55;;;2595:1;2592;2585:12;2544:55;2660:2;2653:4;2645:6;2641:17;2634:4;2625:7;2621:18;2608:55;2708:1;2683:16;;;2701:4;2679:27;2672:38;;;;2687:7;2211:530;-1:-1:-1;;;2211:530:55:o;2746:1177::-;2814:5;2867:3;2860:4;2852:6;2848:17;2844:27;2834:55;;2885:1;2882;2875:12;2834:55;2921:6;2908:20;2947:4;2970:18;2966:2;2963:26;2960:52;;;2992:18;;:::i;:::-;3032:36;3064:2;3059;3056:1;3052:10;3048:19;3032:36;:::i;:::-;3102:15;;;3188:1;3184:10;;;;3172:23;;3168:32;;;3133:12;;;;3212:15;;;3209:35;;;3240:1;3237;3230:12;3209:35;3276:2;3268:6;3264:15;3288:606;3304:6;3299:3;3296:15;3288:606;;;3382:4;3376:3;3371;3367:13;3363:24;3360:114;;;3428:1;3457:2;3453;3446:14;3360:114;3500:21;;:::i;:::-;3549:17;;-1:-1:-1;;;;;3601:33:55;;3589:46;;3579:144;;3677:1;3706:2;3702;3695:14;3579:144;3736:22;;3807:12;;;3794:26;3778:14;;;3771:50;3834:18;;3872:12;;;;3330:4;3321:14;3288:606;;;-1:-1:-1;3912:5:55;2746:1177;-1:-1:-1;;;;;;2746:1177:55:o;3928:1012::-;4046:9;4105:4;4097:5;4081:14;4077:26;4073:37;4070:57;;;4123:1;4120;4113:12;4070:57;4151:21;;:::i;:::-;4210:5;4197:19;4188:7;4181:36;4251:33;4280:2;4273:5;4269:14;4251:33;:::i;:::-;4246:2;4237:7;4233:16;4226:59;4332:2;4325:5;4321:14;4308:28;4355:18;4396:2;4388:6;4385:14;4382:34;;;4412:1;4409;4402:12;4382:34;4450:52;4487:14;4478:6;4471:5;4467:18;4450:52;:::i;:::-;4445:2;4436:7;4432:16;4425:78;4552:2;4545:5;4541:14;4528:28;4512:44;;4581:2;4571:8;4568:16;4565:36;;;4597:1;4594;4587:12;4565:36;4635:54;4674:14;4663:8;4656:5;4652:20;4635:54;:::i;:::-;4630:2;4621:7;4617:16;4610:80;4739:3;4732:5;4728:15;4715:29;4699:45;;4769:2;4759:8;4756:16;4753:36;;;4785:1;4782;4775:12;4753:36;;4824:80;4889:14;4878:8;4871:5;4867:20;4824:80;:::i;:::-;4818:3;4805:17;;4798:107;-1:-1:-1;4809:7:55;3928:1012;-1:-1:-1;;3928:1012:55:o;4945:412::-;5074:3;5112:6;5106:13;5137:1;5147:129;5161:6;5158:1;5155:13;5147:129;;;5259:4;5243:14;;;5239:25;;5233:32;5220:11;;;5213:53;5176:12;5147:129;;;-1:-1:-1;5331:1:55;5295:16;;5320:13;;;-1:-1:-1;5295:16:55;4945:412;-1:-1:-1;4945:412:55:o",
    "linkReferences": {},
    "immutableReferences": {
      "27104": [
        {
          "start": 144,
          "length": 32
        },
        {
          "start": 252,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "getRouter()": "b0f479a1",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintCallSuccessfull\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"notice\":\"THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY. THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE. DO NOT USE THIS CODE IN PRODUCTION.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/cross-chain-nft-minter/DestinationMinter.sol\":\"DestinationMinter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x57a2cf3544afc13eba3ad57a4f71d229da29f13ad9c365f31eda05e26a5f810c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06c7ba983e1c10b02070776f07495cd28906570923290f193fad3f127d8ecb64\",\"dweb:/ipfs/Qmdb7sqnyafGzbdnzx7GVutiHyMQH9WpKu581sjpCXkwJb\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf\",\"dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x089b533ef30304d4fd8747fe8e329c87ff7be2166cd462b27edd59cd09af79cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e4835a96531709bd0854203f4acbe62ef66c31bacbcf776a833e15c8b53ef92\",\"dweb:/ipfs/QmckeKRrGEH8x8EnYZPs1M4KM3RDh3YbU7Kk6RhiV38BkU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xbe54004dbe08d943c30e79db6c77d5d9f11915d356b07b5b89331d9503383272\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3c32996f91911872cf5fe4bfc6de2c86cfc2232693ab00bafc46af518189b19e\",\"dweb:/ipfs/QmUCeUd2G1jNVX3MaoJdHtTzprnvwvaYRQBbSDXgmnt3xm\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0x8c378d493cb48c2094bb3a08e0934c9fd9ae2690cab9df12119329c10d585fec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e14cc78c3210475709c6d0a6ab6ef9a5532acb8467e87ae32d8aea8e687b51fd\",\"dweb:/ipfs/QmfBChjRsdGTuEjjKVyALeXG6mMxXDJtDdHikkyyqMv7uQ\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x1155a7a1111159f6f90c1eff989301d99ae80f52cbfcdbebbc941d4e78e6ea0e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f880a135abf5eb44da2db12ef91621c662b674edda93256977cb2740f728e39f\",\"dweb:/ipfs/QmdKehLeE9Af2Lt92DGXsb1YHiQu9tcQRQQKaAQQZeyQfb\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271\",\"dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW\"]},\"src/cross-chain-nft-minter/DestinationMinter.sol\":{\"keccak256\":\"0x80e6112b7141303b964a48aaaaf80467f430a6261e2802e74e1f6a3fd88abc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f1678297bbe21889d593829152067b748c36c3e2312300026faffb02eecf5e\",\"dweb:/ipfs/QmZogXruJzVFE5K74Y4P17EQGNVbdBcN4AuQRiUJVi9ZdP\"]},\"src/cross-chain-nft-minter/MyNFT.sol\":{\"keccak256\":\"0x6b279507c8ffb5ed7349341d25e7d08438605d70e40e0ba10111c2264d82df93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0213f464750fe7bdbcb477c28a6db5533b9c3a93e5db05cabd3a847da9b6e0a6\",\"dweb:/ipfs/QmZbqeZcke8cKSeiEUYkksbjSDoJcvBRnN4UwETMk3zwkk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MintCallSuccessfull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/",
        ":@chainlink/contracts/=node_modules/@chainlink/contracts/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/cross-chain-nft-minter/DestinationMinter.sol": "DestinationMinter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648",
        "urls": [
          "bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38",
          "dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x57a2cf3544afc13eba3ad57a4f71d229da29f13ad9c365f31eda05e26a5f810c",
        "urls": [
          "bzz-raw://06c7ba983e1c10b02070776f07495cd28906570923290f193fad3f127d8ecb64",
          "dweb:/ipfs/Qmdb7sqnyafGzbdnzx7GVutiHyMQH9WpKu581sjpCXkwJb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c",
        "urls": [
          "bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8",
          "dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4",
        "urls": [
          "bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf",
          "dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x089b533ef30304d4fd8747fe8e329c87ff7be2166cd462b27edd59cd09af79cb",
        "urls": [
          "bzz-raw://6e4835a96531709bd0854203f4acbe62ef66c31bacbcf776a833e15c8b53ef92",
          "dweb:/ipfs/QmckeKRrGEH8x8EnYZPs1M4KM3RDh3YbU7Kk6RhiV38BkU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xbe54004dbe08d943c30e79db6c77d5d9f11915d356b07b5b89331d9503383272",
        "urls": [
          "bzz-raw://3c32996f91911872cf5fe4bfc6de2c86cfc2232693ab00bafc46af518189b19e",
          "dweb:/ipfs/QmUCeUd2G1jNVX3MaoJdHtTzprnvwvaYRQBbSDXgmnt3xm"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0x8c378d493cb48c2094bb3a08e0934c9fd9ae2690cab9df12119329c10d585fec",
        "urls": [
          "bzz-raw://e14cc78c3210475709c6d0a6ab6ef9a5532acb8467e87ae32d8aea8e687b51fd",
          "dweb:/ipfs/QmfBChjRsdGTuEjjKVyALeXG6mMxXDJtDdHikkyyqMv7uQ"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x1155a7a1111159f6f90c1eff989301d99ae80f52cbfcdbebbc941d4e78e6ea0e",
        "urls": [
          "bzz-raw://f880a135abf5eb44da2db12ef91621c662b674edda93256977cb2740f728e39f",
          "dweb:/ipfs/QmdKehLeE9Af2Lt92DGXsb1YHiQu9tcQRQQKaAQQZeyQfb"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol": {
        "keccak256": "0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5",
        "urls": [
          "bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271",
          "dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW"
        ],
        "license": "MIT"
      },
      "src/cross-chain-nft-minter/DestinationMinter.sol": {
        "keccak256": "0x80e6112b7141303b964a48aaaaf80467f430a6261e2802e74e1f6a3fd88abc77",
        "urls": [
          "bzz-raw://20f1678297bbe21889d593829152067b748c36c3e2312300026faffb02eecf5e",
          "dweb:/ipfs/QmZogXruJzVFE5K74Y4P17EQGNVbdBcN4AuQRiUJVi9ZdP"
        ],
        "license": "MIT"
      },
      "src/cross-chain-nft-minter/MyNFT.sol": {
        "keccak256": "0x6b279507c8ffb5ed7349341d25e7d08438605d70e40e0ba10111c2264d82df93",
        "urls": [
          "bzz-raw://0213f464750fe7bdbcb477c28a6db5533b9c3a93e5db05cabd3a847da9b6e0a6",
          "dweb:/ipfs/QmZbqeZcke8cKSeiEUYkksbjSDoJcvBRnN4UwETMk3zwkk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/cross-chain-nft-minter/DestinationMinter.sol",
    "id": 30179,
    "exportedSymbols": {
      "CCIPReceiver": [
        27209
      ],
      "Client": [
        27331
      ],
      "DestinationMinter": [
        30178
      ],
      "MyNFT": [
        30223
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:860:51",
    "nodes": [
      {
        "id": 30120,
        "nodeType": "PragmaDirective",
        "src": "32:23:51",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 30122,
        "nodeType": "ImportDirective",
        "src": "57:99:51",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30179,
        "sourceUnit": 27210,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30121,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27209,
              "src": "65:12:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30124,
        "nodeType": "ImportDirective",
        "src": "157:84:51",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30179,
        "sourceUnit": 27332,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30123,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27331,
              "src": "165:6:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30126,
        "nodeType": "ImportDirective",
        "src": "242:34:51",
        "nodes": [],
        "absolutePath": "src/cross-chain-nft-minter/MyNFT.sol",
        "file": "./MyNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30179,
        "sourceUnit": 30224,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30125,
              "name": "MyNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30223,
              "src": "250:5:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30178,
        "nodeType": "ContractDefinition",
        "src": "454:437:51",
        "nodes": [
          {
            "id": 30132,
            "nodeType": "VariableDeclaration",
            "src": "503:9:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "509:3:51",
            "scope": 30178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MyNFT_$30223",
              "typeString": "contract MyNFT"
            },
            "typeName": {
              "id": 30131,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30130,
                "name": "MyNFT",
                "nameLocations": [
                  "503:5:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30223,
                "src": "503:5:51"
              },
              "referencedDeclaration": 30223,
              "src": "503:5:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyNFT_$30223",
                "typeString": "contract MyNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30134,
            "nodeType": "EventDefinition",
            "src": "519:28:51",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe88",
            "name": "MintCallSuccessfull",
            "nameLocation": "525:19:51",
            "parameters": {
              "id": 30133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "544:2:51"
            }
          },
          {
            "id": 30151,
            "nodeType": "FunctionDefinition",
            "src": "553:109:51",
            "nodes": [],
            "body": {
              "id": 30150,
              "nodeType": "Block",
              "src": "622:40:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30144,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30132,
                      "src": "632:3:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyNFT_$30223",
                        "typeString": "contract MyNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30146,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30138,
                          "src": "644:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30145,
                        "name": "MyNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30223,
                        "src": "638:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MyNFT_$30223_$",
                          "typeString": "type(contract MyNFT)"
                        }
                      },
                      "id": 30147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "638:17:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyNFT_$30223",
                        "typeString": "contract MyNFT"
                      }
                    },
                    "src": "632:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyNFT_$30223",
                      "typeString": "contract MyNFT"
                    }
                  },
                  "id": 30149,
                  "nodeType": "ExpressionStatement",
                  "src": "632:23:51"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30141,
                    "name": "router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30136,
                    "src": "614:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 30142,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 30140,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "601:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27209,
                  "src": "601:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "601:20:51"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 30139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30136,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "573:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 30151,
                  "src": "565:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30138,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "589:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 30151,
                  "src": "581:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "564:36:51"
            },
            "returnParameters": {
              "id": 30143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:0:51"
            },
            "scope": 30178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30177,
            "nodeType": "FunctionDefinition",
            "src": "668:221:51",
            "nodes": [],
            "body": {
              "id": 30176,
              "nodeType": "Block",
              "src": "760:129:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30159,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30159,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "776:7:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 30176,
                      "src": "771:12:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 30158,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "771:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 30168,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30165,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30154,
                          "src": "807:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$27294_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 30166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "815:4:51",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27289,
                        "src": "807:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30162,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30132,
                            "src": "797:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyNFT_$30223",
                              "typeString": "contract MyNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MyNFT_$30223",
                              "typeString": "contract MyNFT"
                            }
                          ],
                          "id": 30161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "789:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "789:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "789:12:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 30164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "802:4:51",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "789:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 30167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:31:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "770:50:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30170,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30159,
                        "src": "838:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "830:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 30171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:16:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30172,
                  "nodeType": "ExpressionStatement",
                  "src": "830:16:51"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30173,
                      "name": "MintCallSuccessfull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30134,
                      "src": "861:19:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 30174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:21:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30175,
                  "nodeType": "EmitStatement",
                  "src": "856:26:51"
                }
              ]
            },
            "baseFunctions": [
              27174
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "677:12:51",
            "overrides": {
              "id": 30156,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "751:8:51"
            },
            "parameters": {
              "id": 30155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30154,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "728:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 30177,
                  "src": "699:36:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$27294_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 30153,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30152,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "699:6:51",
                        "706:14:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27294,
                      "src": "699:21:51"
                    },
                    "referencedDeclaration": 27294,
                    "src": "699:21:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$27294_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:52:51"
            },
            "returnParameters": {
              "id": 30157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:0:51"
            },
            "scope": 30178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30128,
              "name": "CCIPReceiver",
              "nameLocations": [
                "484:12:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27209,
              "src": "484:12:51"
            },
            "id": 30129,
            "nodeType": "InheritanceSpecifier",
            "src": "484:12:51"
          }
        ],
        "canonicalName": "DestinationMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30127,
          "nodeType": "StructuredDocumentation",
          "src": "278:175:51",
          "text": " THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n DO NOT USE THIS CODE IN PRODUCTION."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30178,
          27209,
          27453,
          27222
        ],
        "name": "DestinationMinter",
        "nameLocation": "463:17:51",
        "scope": 30179,
        "usedErrors": [
          27190
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 51
}